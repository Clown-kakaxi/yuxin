package com.yuchengtech.bcrm.finService.action;

import javax.servlet.http.HttpServletRequest;
import javax.sql.DataSource;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.security.core.context.SecurityContextHolder;

import com.opensymphony.xwork2.ActionContext;
import com.yuchengtech.bcrm.finService.model.OcrmFFinTemplate;
import com.yuchengtech.bcrm.finService.service.FinProdTemplateService;
import com.yuchengtech.bob.common.CommonAction;
import com.yuchengtech.bob.vo.AuthUser;

/**
 * @describtion: autogenerated by lhqheli's Tools
 * 
 * @author : lhqheli (email: lhqheli@gmail.com)
 * @date : 2014-07-24 13:45:29
 */
@Action("/finProdTemplate")
public class FinProdTemplateAction extends CommonAction{

    private static final long serialVersionUID = 1L;
    
    @Autowired
    @Qualifier("dsOracle")
    private DataSource ds;
    
    @Autowired
    private FinProdTemplateService finProdTemplateService;
    
    @Autowired
    public void init(){
        model = new OcrmFFinTemplate();
        setCommonService(finProdTemplateService);
    }
    
    public void prepare(){
        AuthUser auth = (AuthUser)SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        StringBuffer sb = new StringBuffer("select * from( select t.risk_type,sum(t.PROD_TYPE1) as PROD_TYPE1,sum(t.PROD_TYPE2) as PROD_TYPE2,sum(t.PROD_TYPE3) as PROD_TYPE3,sum(t.PROD_TYPE4) as PROD_TYPE4,sum(t.PROD_TYPE5) as PROD_TYPE5 from (SELECT t.risk_type, case when t.prod_type = '1' then sum(t.prod_rate) end as PROD_TYPE1, case when t.prod_type = '2' then sum(t.prod_rate) end as PROD_TYPE2,case when t.prod_type = '3' then sum(t.prod_rate) end as PROD_TYPE3, case when t.prod_type = '4' then sum(t.prod_rate) end as PROD_TYPE4 ,case when t.prod_type = '5' then sum(t.prod_rate) end as PROD_TYPE5  FROM OCRM_F_FIN_TEMPLATE t group by t.risk_type,t.prod_type ) t group by t.risk_type)where 1=1 ");
        for(String key:this.getJson().keySet()){
            if(null!=this.getJson().get(key) && !"".equals(this.getJson().get(key))){
                if("PROD_TYPE".equals(key)){
                    sb.append(" AND PROD_TYPE = '"+this.getJson().get(key)+"'");
                }
            	if("RISK_TYPE".equals(key)){
                    sb.append(" AND RISK_TYPE = '"+this.getJson().get(key)+"'");
                }
            }
        }
        SQL = sb.toString();
        datasource =ds;
    }
    
    /**
     * batch delete finProdTemplate
     */
    public String batchDestroy(){
        ActionContext ctx = ActionContext.getContext();
        request =(HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);
        String ids = request.getParameter("ids");
        finProdTemplateService.batchRemove(ids);
        return "success";
    }
}
