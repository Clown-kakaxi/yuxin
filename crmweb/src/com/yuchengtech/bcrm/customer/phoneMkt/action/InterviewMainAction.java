package com.yuchengtech.bcrm.customer.phoneMkt.action;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.sql.DataSource;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.json.JSONException;
import org.apache.struts2.json.JSONUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.security.core.context.SecurityContextHolder;

import com.opensymphony.xwork2.ActionContext;
import com.yuchengtech.bcrm.customer.phoneMkt.model.OcrmFMmInterviewMain;
import com.yuchengtech.bcrm.customer.phoneMkt.service.InterviewMainService;
import com.yuchengtech.bob.common.CommonAction;
import com.yuchengtech.bob.vo.AuthUser;

/**
 * @describtion: autogenerated by lhqheli's Tools
 * 
 * @author : lhqheli (email: lhqheli@gmail.com)
 * @date : 2014-02-08 15:34:24
 */
@Action("/interviewMain")
public class InterviewMainAction extends CommonAction{

    private static final long serialVersionUID = 1L;
    
    @Autowired
    @Qualifier("dsOracle")
    private DataSource ds;
    
    @Autowired
    private InterviewMainService interviewMainService;
    
    @Autowired
    public void init(){
        model = new OcrmFMmInterviewMain();
        setCommonService(interviewMainService);
    }
    
    public void prepare(){
        AuthUser auth = (AuthUser)SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        StringBuffer sb = new StringBuffer("SELECT t.*,f.F_VALUE as BIS_TYPE_ORA FROM OCRM_F_MM_INTERVIEW_MAIN t left join OCRM_SYS_LOOKUP_ITEM f on t.BIS_TYPE = f.F_CODE and f.F_LOOKUP_ID like 'BIS_TYPE_%' WHERE 1=1 ");
        ActionContext ctx = ActionContext.getContext();
        request =(HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);
        String custId = request.getParameter("custId");
        sb.append(" and t.cust_id = '"+custId+"'");
        for(String key:this.getJson().keySet()){
            if(null!=this.getJson().get(key) && !"".equals(this.getJson().get(key))){
                if("ID".equals(key)){
                    sb.append(" AND t.ID = '"+this.getJson().get(key)+"'");
                }
            	if("NAME".equals(key)){
                    sb.append(" AND t.NAME LIKE '%"+this.getJson().get(key)+"%'");
                }
            }
        }
        setPrimaryKey("t.id desc");
        addOracleLookup("BIS_TYPE", "BIS_TYPE");
        addOracleLookup("TEL_TYPE", "TEL_TYPE");
        addOracleLookup("FOLLOW_DO", "FOLLOW_DO");
        addOracleLookup("FR_ID", "FR_TYPE");
        SQL = sb.toString();
        datasource =ds;
    }
    
    /**
     * 更新面谈记录的业务类型等
     * @return
     */
    public String updateInterview(){
    	ActionContext ctx = ActionContext.getContext();
        request =(HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);
        String interviewJson = request.getParameter("interviewJson");
        Map ruleInfoJsonList = null;
    	try {
			ruleInfoJsonList  = (HashMap) JSONUtil.deserialize(interviewJson);
			interviewMainService.updateInterview(ruleInfoJsonList);
		} catch (JSONException e) {
			e.printStackTrace();
		}
        return "success";
    }
    
    /**
     * batch delete interviewMain
     */
    public String batchDestroy(){
        ActionContext ctx = ActionContext.getContext();
        request =(HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);
        String ids = request.getParameter("ids");
        interviewMainService.batchRemove(ids);
        return "success";
    }
}
