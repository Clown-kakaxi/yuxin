package com.yuchengtech.bcrm.customer.phoneMkt.service;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.ServletActionContext;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Service;

import com.opensymphony.xwork2.ActionContext;
import com.yuchengtech.bcrm.customer.phoneMkt.model.OcrmFMmInterviewMain;
import com.yuchengtech.bob.common.CommonService;
import com.yuchengtech.bob.common.JPABaseDAO;
import com.yuchengtech.bob.vo.AuthUser;

/**
 * @describtion: autogenerated by lhqheli's Tools
 *
 * @author : lhqheli (email: lhqheli@gmail.com)
 * @date : 2014-02-08 15:34:24
 */
@Service
public class InterviewMainService extends CommonService {
    public InterviewMainService(){
        JPABaseDAO<OcrmFMmInterviewMain, Long> baseDao = new JPABaseDAO<OcrmFMmInterviewMain, Long>(OcrmFMmInterviewMain.class);
        super.setBaseDAO(baseDao);
    }
    
    /**
     * create or update interviewMain
     */
    public Object save(Object obj) {
		ActionContext ctx = ActionContext.getContext();
		HttpServletRequest request =(HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);
		String custId = request.getParameter("custId");
		String physicalAddr = request.getParameter("physicalAddr");
		String bizNo = request.getParameter("bizNo");
    	AuthUser auth = (AuthUser)SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        OcrmFMmInterviewMain interviewMain = (OcrmFMmInterviewMain)obj;
        interviewMain.setCustId(custId);
        interviewMain.setPhysicalAddr(physicalAddr);
        interviewMain.setBizNo(bizNo);
        interviewMain.setInterviewDate(new Date());
        interviewMain.setUserId(auth.getUserId());
        interviewMain.setUserName(auth.getUsername());
//        interviewMain.setBisType(bisType);
//        interviewMain.setFollowDo(followDo);
//        interviewMain.setRemark(remark);
//        interviewMain.setTelType(telType);
        return super.save(interviewMain);
    }
    
    /**
     * 更新面谈记录的业务类型等
     * @param interviewJson
     */
    public void updateInterview(Map interviewJson){
    	String bizNo =  String.valueOf(interviewJson.get("bizNo"));
    	String bisType =  String.valueOf(interviewJson.get("bisType"));
    	String followDo =  String.valueOf(interviewJson.get("followDo"));
    	String telType =  String.valueOf(interviewJson.get("telType"));
    	String remark =  String.valueOf(interviewJson.get("remark"));
    	this.em.createNativeQuery("update ocrm_f_mm_interview_main t set t.bis_type = '"+bisType+"',t.tel_type='"+telType+"',t.follow_do='"+followDo+"',t.remark= '"+remark+"' where t.biz_no = '"+bizNo+"'").executeUpdate();
    }
    
    /**
     * bacth delete interviewMain
     */
    public void batchRemove(String ids) {
        Map<String, Object> values = new HashMap<String, Object>();
        super.batchUpdateByName("DELETE FROM OcrmFMmInterviewMain t WHERE t.id IN("+ ids +")", values);
    }
}
