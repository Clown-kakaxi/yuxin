package com.yuchengtech.bcrm.product.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.sql.DataSource;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import com.opensymphony.xwork2.ActionContext;
import com.yuchengtech.bcrm.product.model.OcrmFPdProdInfo;
import com.yuchengtech.bcrm.product.service.ProdInfoService;
import com.yuchengtech.bob.common.CommonAction;
import com.yuchengtech.crm.constance.SystemConstance;

/**
 * @describtion: autogenerated by lhqheli's Tools
 * 
 * @author : lhqheli (email: lhqheli@gmail.com)
 * @date : 2014-04-30 10:21:21
 * @modify luyy 2014-06-30
 */
@Action("/prodInfo")
public class ProdInfoAction extends CommonAction{

    private static final long serialVersionUID = 1L;
    
    @Autowired
    @Qualifier("dsOracle")
    private DataSource ds;
    
    @Autowired
    private ProdInfoService prodInfoService;
    
    @Autowired
    public void init(){
        model = new OcrmFPdProdInfo();
        setCommonService(prodInfoService);
    }
    
    public void prepare(){
    	ActionContext ctx = ActionContext.getContext();
        request =(HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);
		boolean ifAll = true;//是否查询全部产品
		String CATL_CODE = "";
		String userType=request.getParameter("user_type");
    	StringBuffer sb  = new StringBuffer("select a.*,b.catl_name, " +
    			"  (case when (select count(*) from OCRM_F_PD_PROD_TC_SET tc where tc.product_id = a.product_id )>0 then 1 else 0 end ) as TARGET_CUST_NUM " );//查询是否设定过目标客户
		if("ORACLE".equals(SystemConstance.DB_TYPE)){		
			sb.append(" from ocrm_f_pd_prod_info a inner join ocrm_f_pd_prod_catl_view b on a.catl_code=b.catl_code where 1=1 ");
			if("1".equals(userType)){
				sb.append("  and  (a.type_fit_cust ='1' or a.type_fit_cust='1,2')");
			}
		}else if("DB2".equals(SystemConstance.DB_TYPE)){
			sb.append(" from ocrm_f_pd_prod_catl_view f,ocrm_f_pd_prod_info a inner join ocrm_f_pd_prod_catl_view b on a.catl_code=b.catl_code where 1=1 ");			
		}
    	for(String key : this.getJson().keySet()){
    		if(null!=this.getJson().get(key)&&!this.getJson().get(key).equals("")){	
    			if(null!=key&&key.equals("CATL_CODE")&&!"0".equals(this.json.get("CATL_CODE"))){
					ifAll = false;
					CATL_CODE = this.getJson().get(key).toString();
					if("ORACLE".equals(SystemConstance.DB_TYPE)){
						sb.append("  and b.catlseq like (select catlseq from ocrm_f_pd_prod_catl_view where catl_code="+this.getJson().get(key)+")||'%'");
					}else if("DB2".equals(SystemConstance.DB_TYPE)){
						sb.append(" and  f.catl_code="+this.getJson().get(key)+" and locate(f.catlseq,b.catlseq)>0");
					}
					
				}else if(null!=key&&key.equals("PRODUCT_ID")){
					sb.append("  and a.PRODUCT_ID like '%"+this.getJson().get(key)+"%'  ");
				}else if(null!=key&&key.equals("PROD_NAME")){
					sb.append("  and a.PROD_NAME like '%"+this.getJson().get(key)+"%'  ");
				}
				else if(null!=key&&key.equals("PROD_START_DATE")){
					sb.append(" and  a.PROD_START_DATE= to_date('"+this.getJson().get(key)+"','yyyy-mm-dd')" );
				}else if(null!=key&&key.equals("PROD_END_DATE")){
					sb.append("  and  a.PROD_END_DATE= to_date('"+this.getJson().get(key)+"','yyyy-mm-dd')");
                }else if(null!=key&&key.equals("PROD_STATE")){
					sb.append("  and  a.PROD_STATE= "+this.getJson().get(key));
                }
    		}
		}
    	
    	//根据查询的产品类别  查询相应的展示方案 以添加数据字典转换
    	if(ifAll){
    		addOracleLookup("RISK_LEVEL","PROD_RISK_LEVEL");
    	}else{
    		String sql = "select  column_name, COLUMN_TYPE,DIC_NAME from OCRM_F_PD_PROD_COLUMN t where to_char(t.column_id) in " +
			"(select COLUMN_ID from OCRM_F_PD_PROD_SHOW_COLUMN where plan_id = (select PROD_VIEW from OCRM_F_PD_PROD_CATL where CATL_CODE='"+CATL_CODE+"'))";
			List<Object[]> list = prodInfoService.getBaseDAO().findByNativeSQLWithIndexParam(sql);
			if(list.size()>0){
				for (Object[] o : list) {
					if("2".equals(o[1].toString())){//数据字典
						this.addOracleLookup( o[0].toString(), o[2].toString());
					}
				}
			}
    	}
    	addOracleLookup("TARGET_CUST_NUM","IF_FLAG");
    	setPrimaryKey("TO_NUMBER(A.PRODUCT_ID)");
    	SQL=sb.toString();
    	datasource = ds;
        	
    }
    
    /**
     * batch delete prodInfo
     */
    public String batchDestroy(){
        ActionContext ctx = ActionContext.getContext();
        request =(HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);
        String ids = request.getParameter("ids");
        prodInfoService.batchRemove(ids);
        return "success";
    }
}
